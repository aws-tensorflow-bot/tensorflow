name: Sync upstream branches
on:
  schedule:
    - cron:  '0 8 * * *'
jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Merge upstream 1.15
        run: |
          git config --global user.name 'aws-tensorflow-bot'
          git config --global user.email 'aws-tensorflow-bot@amazon.com'
          git checkout r1.15
          git pull --unshallow
          git remote add upstream https://github.com/tensorflow/tensorflow.git
          git fetch upstream
          git merge --no-edit upstream/r1.15
          status=`git status`
          echo "status: ${status}"
          readonly local commits_check=$(echo "$status" | grep -c 'ahead' )
          if [[ "$commits_check" -eq 0 ]]; then
            echo "Branch has no new changes."
            echo "::set-output name=skip::true"
          else
            echo "Branch has new commits, proceeding to run CodeBuild project."
            echo "::set-output name=skip::false"
          fi
          git push
        id: git-status-115
      - name: Merge upstream 2.0
        run: |
          git checkout r2.0
          git pull --unshallow
          git fetch upstream
          git merge --no-edit upstream/r2.0
          status=`git status`
          echo "status: ${status}"
          readonly local commits_check=$(echo "$status" | grep -c 'ahead' )
          if [[ "$commits_check" -eq 0 ]]; then
            echo "Branch has no new changes."
            echo "::set-output name=skip::true"
          else
            echo "Branch has new commits, proceeding to run CodeBuild project."
            echo "::set-output name=skip::false"
          fi
          git push
        id: git-status-20
      - name: Merge upstream 2.1
        run: |
          git checkout r2.1
          git pull --unshallow
          git fetch upstream
          git merge --no-edit upstream/r2.1
          status=`git status`
          echo "status: ${status}"
          readonly local commits_check=$(echo "$status" | grep -c 'ahead' )
          if [[ "$commits_check" -eq 0 ]]; then
            echo "Branch has no new changes."
            echo "::set-output name=skip::true"
          else
            echo "Branch has new commits, proceeding to run CodeBuild project."
            echo "::set-output name=skip::false"
          fi
          git push
        id: git-status-21
      - name: Merge upstream 2.2
        run: |
          git checkout r2.2
          git pull --unshallow
          git fetch upstream
          git merge --no-edit upstream/r2.2
          status=`git status`
          echo "status: ${status}"
          readonly local commits_check=$(echo "$status" | grep -c 'ahead' )
          if [[ "$commits_check" -eq 0 ]]; then
            echo "Branch has no new changes."
            echo "::set-output name=skip::true"
          else
            echo "Branch has new commits, proceeding to run CodeBuild project."
            echo "::set-output name=skip::false"
          fi
          git push
        id: git-status-22
      - name: Merge upstream 2.3
        run: |
          git checkout r2.3
          git pull --unshallow
          git fetch upstream
          git merge --no-edit upstream/r2.3
          status=`git status`
          echo "status: ${status}"
          readonly local commits_check=$(echo "$status" | grep -c 'ahead' )
          if [[ "$commits_check" -eq 0 ]]; then
            echo "Branch has no new changes."
            echo "::set-output name=skip::true"
          else
            echo "Branch has new commits, proceeding to run CodeBuild project."
            echo "::set-output name=skip::false"
          fi
          git push
        id: git-status-23
      - name: Merge upstream 2.4
        run: |
          git checkout r2.4
          git pull --unshallow
          git fetch upstream
          git merge --no-edit upstream/r2.4
          status=`git status`
          echo "status: ${status}"
          readonly local commits_check=$(echo "$status" | grep -c 'ahead' )
          if [[ "$commits_check" -eq 0 ]]; then
            echo "Branch has no new changes."
            echo "::set-output name=skip::true"
          else
            echo "Branch has new commits, proceeding to run CodeBuild project."
            echo "::set-output name=skip::false"
          fi
          git push
        id: git-status-24
      - name: Checkout master branch
        run: git checkout --track origin/master
      - name: Run CodeBuild 1.15
        if: steps.git-status-115.outputs.skip == 'false'
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: Tensorflow-git-auto-sync
          buildspec-override: aws-ci/git-sync.yml
          env-vars-for-codebuild: |
            TF_VERSION
        env:
          TF_VERSION: 1.15
      - name: Run CodeBuild 2.0
        if: steps.git-status-20.outputs.skip == 'false'
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: Tensorflow-git-auto-sync
          buildspec-override: aws-ci/git-sync.yml
          env-vars-for-codebuild: |
            TF_VERSION
        env:
          TF_VERSION: 2.0
      - name: Run CodeBuild 2.1
        if: steps.git-status-21.outputs.skip == 'false'
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: Tensorflow-git-auto-sync
          buildspec-override: aws-ci/git-sync.yml
          env-vars-for-codebuild: |
            TF_VERSION
        env:
          TF_VERSION: 2.1
      - name: Run CodeBuild 2.2
        if: steps.git-status-22.outputs.skip == 'false'
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: Tensorflow-git-auto-sync
          buildspec-override: aws-ci/git-sync.yml
          env-vars-for-codebuild: |
            TF_VERSION
        env:
          TF_VERSION: 2.2
      - name: Run CodeBuild 2.3
        if: steps.git-status-23.outputs.skip == 'false'
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: Tensorflow-git-auto-sync
          buildspec-override: aws-ci/git-sync.yml
          env-vars-for-codebuild: |
            TF_VERSION
        env:
          TF_VERSION: 2.3
      - name: Run CodeBuild 2.4
        if: steps.git-status-24.outputs.skip == 'false'
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: Tensorflow-git-auto-sync
          buildspec-override: aws-ci/git-sync.yml
          env-vars-for-codebuild: |
            TF_VERSION
        env:
          TF_VERSION: 2.4

